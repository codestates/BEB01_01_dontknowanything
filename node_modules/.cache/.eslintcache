[{"/Users/yuhojin/Desktop/BEB1stProject-05/src/index.js":"1","/Users/yuhojin/Desktop/BEB1stProject-05/src/App.js":"2","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/Homepage.js":"3","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/Navbar.js":"4","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/Footer.js":"5","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/ConnectWallet.js":"6","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/NftList.js":"7","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/MakeNFT.js":"8"},{"size":295,"mtime":1639570316009,"results":"9","hashOfConfig":"10"},{"size":1386,"mtime":1639638477301,"results":"11","hashOfConfig":"10"},{"size":658,"mtime":1639638320121,"results":"12","hashOfConfig":"10"},{"size":4695,"mtime":1639638369482,"results":"13","hashOfConfig":"10"},{"size":1222,"mtime":1639638320121,"results":"14","hashOfConfig":"10"},{"size":369,"mtime":1639638426657,"results":"15","hashOfConfig":"10"},{"size":7172,"mtime":1639638498265,"results":"16","hashOfConfig":"10"},{"size":13438,"mtime":1639638188772,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"y1oghs",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/yuhojin/Desktop/BEB1stProject-05/src/index.js",[],["38","39"],"/Users/yuhojin/Desktop/BEB1stProject-05/src/App.js",[],"/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/Homepage.js",["40","41"],"import React from \"react\";\nimport \"./Homepage.css\";\nfunction Homepage({ light }) {\n  return (\n    <div>\n      <div className=\"image\">\n        <img src=\"./img/lamp.png\" className=\"lamp\" />\n        <img src=\"./img/light.png\" className={light ? \"light_on\" : \"light\"} />\n      </div>\n      <div className=\"text\">\n        <h2>Super NFT Market</h2>\n        <div className=\"text_test\">\n          <p>\n            Transactions through our market increase users' assets than before.\n          </p>\n          <span>Increase your assets through various NFT transactions</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/Navbar.js",["42"],"/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/Footer.js",["43","44","45"],"import { Block, GitHub, LocalActivity } from \"@material-ui/icons\";\nimport React from \"react\";\nimport \"./Footer.css\";\nfunction Footer() {\n  return (\n    <div className=\"footer_box\">\n      <div className=\"menu\">\n        <div className=\"team_name\">\n          <h2>Team Name</h2>\n          <p>아는게 없조</p>\n        </div>\n        <div className=\"gisu\">\n          <h2>기수</h2>\n          <p>BEB_01기</p>\n        </div>\n        <div className=\"team_member\">\n          <h2>Team Member</h2>\n          <p>유호진, 안창남, 김대익</p>\n        </div>\n      </div>\n\n      <div className=\"information\">\n        Block Chain Project_1\n        <a\n          href=\"https://github.com/codestates/BEB1stProject-05\"\n          target=\"_blank\"\n        >\n          <button>\n            <GitHub fontSize=\"large\" />\n          </button>\n        </a>\n        <a\n          href=\"https://github.com/codestates/BEB1stProject-05\"\n          target=\"_blank\"\n        >\n          <button>\n            <LocalActivity fontSize=\"large\" />\n          </button>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/ConnectWallet.js",[],"/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/NftList.js",["46","47"],"/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/MakeNFT.js",["48","49","50"],"import React, { useState } from \"react\";\nimport \"./MakeNFT.css\";\nconst Web3 = require(\"web3\");\n\nfunction MakeNFT({ web3, account }) {\n  const [img, SetImg] = useState(\"\");\n  const [name, SetName] = useState(\"\");\n  const [link, SetLink] = useState(\"\");\n  const [description, SetDescription] = useState(\"\");\n  const [hash, SetHash] = useState([]);\n  const abi = [\n    {\n      inputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"string\",\n          name: \"tokenURI\",\n          type: \"string\",\n        },\n      ],\n      name: \"mintNFT\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"previousOwner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"OwnershipTransferred\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"renounceOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"_data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"transferOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"owner\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenOfOwnerByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ];\n  const CA = \"0x89B078E2eAA3c9c93d3DF3b7A9928a7d08471661\";\n  const my_pri =\n    \"bfe5a22cf2611a04b95fa02dc63b53055ad0aad323156ce2faeaa267aef12abb\";\n  const my_pub = \"0x63545A377b3fE7286014572d9794C93B9FC5c5a3\";\n\n  const clickButton = async () => {\n    if (name !== \"\" && img !== \"\" && link !== \"\" && description !== \"\") {\n      const web3 = new Web3(\n        new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\")\n      );\n\n      const nftContract = await new web3.eth.Contract(abi, CA);\n\n      const nonce = await web3.eth.getTransactionCount(my_pub, \"latest\");\n\n      const NFT = await nftContract.methods.mintNFT(my_pub, \"123\").call();\n      console.log(NFT);\n\n      const tx = {\n        from: my_pub,\n        to: CA,\n        nonce: nonce,\n        gas: 500000,\n        data: nftContract.methods.mintNFT(my_pub, \"asd\").encodeABI(),\n      };\n\n      await web3.eth.accounts.signTransaction(tx, my_pri).then((signedTx) => {\n        web3.eth.sendSignedTransaction(signedTx.rawTransaction, (err, hash) => {\n          if (!err) {\n            web3.eth.getTransaction(hash).then((a) => {\n              console.log(a);\n            });\n          } else {\n            console.log(err);\n          }\n        });\n      });\n\n      const total = await nftContract.methods.totalSupply().call();\n      let arr = [];\n      for (let i = 0; i < total; i++) {\n        arr.push(i);\n      }\n\n      for (let tokenID of arr) {\n        let host = await nftContract.methods.ownerOf(tokenID).call();\n        console.log(host);\n      }\n\n      console.log(total);\n    } else {\n      alert(\"모두 입력해 주세요\");\n    }\n  };\n\n  const imgChange = async (e) => {\n    if (e.files === undefined) {\n      let reader = new FileReader();\n\n      reader.readAsDataURL(e.target.files[0]);\n      // base64로 인코딩\n\n      reader.onload = (event) => {\n        const previewImage = document.querySelector(\".img\");\n        previewImage.src = event.target.result;\n        SetImg(event.target.result);\n      };\n    }\n  };\n\n  const nameChange = (e) => {\n    SetName(e.target.value);\n  };\n\n  const linkChange = (e) => {\n    SetLink(e.target.value);\n  };\n  const descriptionChange = (e) => {\n    SetDescription(e.target.value);\n  };\n  return (\n    <div className=\"MakeNFT_back\">\n      <div className=\"MakeNFT_BOX\">\n        <div id=\"title\">Create New Item</div>\n        <div className=\"img_box\">\n          <span className=\"img_span\">img</span>\n          <span className=\"img_example\">\n            File types supported: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG,\n            GLB, GLTF. Max size: 100 MB\n          </span>\n          <img src=\"/\" className=\"img\" />\n          <input\n            id=\"img\"\n            type=\"file\"\n            placeholder=\"img\"\n            required\n            onChange={imgChange}\n          />\n          {/* <button id=\"imgbutton\" onClick={imgChange}>\n            Select Your Image!\n          </button> */}\n        </div>\n        <div className=\"name_box\">\n          <span className=\"name_span\">name</span>\n          <input\n            type=\"text\"\n            placeholder=\"name\"\n            required\n            onChange={nameChange}\n            value={name}\n          />\n        </div>\n        <div className=\"link_box\">\n          <span className=\"link_span\">link</span>\n          <input\n            type=\"text\"\n            placeholder=\"link\"\n            required\n            onChange={linkChange}\n            value={link}\n          />\n        </div>\n        <div className=\"description_box\">\n          <span className=\"description_span\">description</span>\n          <input\n            type=\"text\"\n            placeholder=\"description\"\n            required\n            onChange={descriptionChange}\n            value={description}\n          />\n        </div>\n        <button className=\"createbutton\" onClick={clickButton}>\n          Create\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MakeNFT;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":9,"nodeType":"57","endLine":7,"endColumn":54},{"ruleId":"55","severity":1,"message":"56","line":8,"column":9,"nodeType":"57","endLine":8,"endColumn":79},{"ruleId":"58","severity":1,"message":"59","line":22,"column":8,"nodeType":"60","messageId":"61","endLine":22,"endColumn":16},{"ruleId":"58","severity":1,"message":"62","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":24,"column":9,"nodeType":"57","messageId":"65","endLine":27,"endColumn":10,"fix":"66"},{"ruleId":"63","severity":1,"message":"64","line":32,"column":9,"nodeType":"57","messageId":"65","endLine":35,"endColumn":10,"fix":"67"},{"ruleId":"58","severity":1,"message":"68","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"69","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":14},{"ruleId":"58","severity":1,"message":"70","line":10,"column":10,"nodeType":"60","messageId":"61","endLine":10,"endColumn":14},{"ruleId":"58","severity":1,"message":"71","line":10,"column":16,"nodeType":"60","messageId":"61","endLine":10,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":570,"column":11,"nodeType":"57","endLine":570,"endColumn":42},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","'Block' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"74","text":"75"},{"range":"76","text":"75"},"'Footer' is defined but never used.","'Navbar' is defined but never used.","'hash' is assigned a value but never used.","'SetHash' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[702,702]," rel=\"noreferrer\"",[905,905]]